// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	news "github.com/bhill77/web/service/news"
	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Add provides a mock function with given fields: article
func (_m *Service) Add(article news.Article) (news.Article, error) {
	ret := _m.Called(article)

	var r0 news.Article
	if rf, ok := ret.Get(0).(func(news.Article) news.Article); ok {
		r0 = rf(article)
	} else {
		r0 = ret.Get(0).(news.Article)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(news.Article) error); ok {
		r1 = rf(article)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: filter
func (_m *Service) GetAll(filter map[string]string) []news.Article {
	ret := _m.Called(filter)

	var r0 []news.Article
	if rf, ok := ret.Get(0).(func(map[string]string) []news.Article); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]news.Article)
		}
	}

	return r0
}
